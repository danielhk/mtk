ifeq (met.ko,$(patsubst %_intermediates,%,$(notdir $(M))))
MET_CORE := $(MTK_PLATFORM)/core

obj-m := met.o

ccflags-y += -DCONFIG_MET_MODULE
ccflags-y += -I$(srctree)/include/

met-y := $(MET_CORE)/met_main.o $(MET_CORE)/interface.o $(MET_CORE)/sampler.o \
	$(MET_CORE)/dummy_header.o $(MET_CORE)/util.o $(MET_CORE)/stat.o $(MET_CORE)/cookie.o \
	$(MET_CORE)/cpu_pmu.o $(MET_CORE)/mem_stat.o $(MET_CORE)/switch.o \
	$(MET_CORE)/trace_event.o $(MET_CORE)/ondiemet.o $(MET_CORE)/ondiemet_log.o


CFLAGS_interface.o += -DMET_USER_EVENT_SUPPORT

ifeq ($(ARCH), mips)
	met-y += $(MET_CORE)/mips_pmu_hw.o
endif

ifeq ($(ARCH), arm)
	met-y += $(MET_CORE)/v7_pmu_hw.o
	met-y += $(MET_CORE)/v6_pmu_hw.o
endif
ifeq ($(ARCH), arm64)
	met-y += $(MET_CORE)/v8_pmu_hw.o
endif


# MET in module form will use met_tag_new.c
met-y += $(MET_CORE)/met_tag_ex.o
CFLAGS_met_tag_ex.o += -DMET_USER_EVENT_SUPPORT

met-$(CONFIG_CPU_FREQ) += $(MET_CORE)/power.o

endif # met.ko
